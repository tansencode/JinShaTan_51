C51 COMPILER V9.01   MAIN                                                                  07/11/2018 12:18:08 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h>
   2          #include<intrins.h>
   3          
   4          #define uint unsigned int   
   5          #define uchar unsigned char 
   6          bit flag300ms = 1;       //300ms定时标志
   7          unsigned char T0RH = 0;  //T0重载值的高字节
   8          unsigned char T0RL = 0;  //T0重载值的低字节
   9          unsigned char RxdByte = 0;  //串口接收到的字节
  10          
  11          void ConfigTimer0(unsigned int ms);
  12          
  13          sbit ADDR0=P1^0;
  14          sbit ADDR1=P1^1;
  15          sbit ADDR2=P1^2;
  16          
  17          sbit ADDR3=P1^3;
  18          sbit ENLED=P1^4;
  19          static int cnt=0;
  20          static int n=0;                //循环移位变量
  21          unsigned char ledd[30]={0xE7,0xDB,0xBD,0x7E,0xBD,0xDB,0xE7,
  22                        0x7F,0xBF,0xDF,0xEF,0xF7,0xFB,0xFD,0xFE,
  23                                    0xFD,0xFB,0xF7,0xEF,0xDF,0xBF,0x7F,0xEF};
  24              //其实就是定义了一个亮灯状态表,由中间到两边，再由两边倒中间,然后P0循环此数组
  25              //1110 0111  ,  1101 1011 , 1011 1101  ,0111 1110, 1011 1101, 1101 1011, 1110 0111
  26          void main()
  27          {
  28   1          unsigned int i=0;
  29   1              EA=1;
  30   1              //static int cnt=0;
  31   1      //      ConfigTimer0(10);  //配置T0定时10ms
  32   1              ENLED=0;
  33   1          ADDR3=1;
  34   1      
  35   1          ADDR2=1;
  36   1          ADDR1=1;
  37   1          ADDR0=0;
  38   1               ConfigTimer0(10);  //配置T0定时10ms
  39   1               //P0=~0x01;               //需在外部定义，移动函数只负责移动，不能直接点亮第一个小灯
  40   1              //P0=0xFF;
  41   1      //      ConfigTimer0(10);  //配置T0定时10ms
  42   1         while(1)
  43   1              
  44   1          {
  45   2                 //ConfigTimer0(10);  //配置T0定时10ms
  46   2                 if(flag300ms)
  47   2                  {
  48   3                        flag300ms=0;
  49   3                                 //ConfigTimer0(10);
  50   3                                       //P0=~(0x01<<n);
  51   3                              //       P0=ledd[n];
  52   3                                       //for(cnt=0;cnt<8;cnt++)    //移位判断，向左移7位，第一个不记做移位
  53   3                                       //if(n==8)
  54   3                                      // {
  55   3                                      // n=0;
C51 COMPILER V9.01   MAIN                                                                  07/11/2018 12:18:08 PAGE 2   

  56   3                                      // P0=~0x01;
  57   3                                      // }
  58   3         
  59   3                      }
  60   2              
  61   2        }
  62   1      }
  63          
  64          /* 配置并启动T0，ms-T0定时时间 */
  65          void ConfigTimer0(unsigned int ms)
  66          {
  67   1          unsigned long tmp;  //临时变量
  68   1          tmp = 11059200 / 12;      //定时器计数频率
  69   1          tmp = (tmp * ms) / 1000;  //计算所需的计数值
  70   1          tmp = 65536 - tmp;        //计算定时器重载值
  71   1          tmp = tmp + 12;           //补偿中断响应延时造成的误差
  72   1          T0RH = (unsigned char)(tmp>>8);  //定时器重载值拆分为高低字节
  73   1          T0RL = (unsigned char)tmp;
  74   1          TMOD &= 0xF0;   //清零T0的控制位
  75   1          TMOD |= 0x01;   //配置T0为模式1
  76   1          TH0 = T0RH;     //加载T0重载值
  77   1          TL0 = T0RL;
  78   1          ET0 = 1;        //使能T0中断
  79   1          TR0 = 1;        //启动T0
  80   1      }
  81          
  82          /* T0中断服务函数，执行300ms定时 */
  83          void InterruptTimer0() interrupt 1
  84          {
  85   1          static unsigned char tmr300ms = 0;
  86   1               static unsigned char i = 0;  //动态扫描的索引
  87   1          //while (TF0 == 0);  //当TF0等于0时一直执行空循环，即停在这里直到T0溢出
  88   1          //TF0 = 0;           //T0溢出后，清零中断标志 
  89   1          TH0 = T0RH;  //重新加载重载值
  90   1          TL0 = T0RL;
  91   1              
  92   1          tmr300ms++;
  93   1          if (tmr300ms >= 100)  //定时300ms
  94   1          {
  95   2      
  96   2             ENLED=0;
  97   2          ADDR3=1;
  98   2      
  99   2          ADDR2=1;
 100   2          ADDR1=1;
 101   2          ADDR0=0;
 102   2              switch (i)
 103   2          {
 104   3              //点阵LED部分
 105   3              case 0:  i++; P0=0xE7; break;
 106   3              case 1:   i++; P0=0xDB; break;
 107   3              case 2:  i++; P0=0xBD; break;
 108   3              case 3:  i++; P0=0x7E; break;
 109   3              case 4:  i++; P0=0xBD; break;
 110   3                      case 5:i++; P0=0xBD; break;
 111   3              case 6:i++; P0=0xE7; break;
 112   3              case 7: i=0; P0=0x7E; break; 
 113   3              }
 114   2              n++;
 115   2                  tmr300ms = 0;
 116   2               flag300ms = 1;
 117   2               if(n==6)
C51 COMPILER V9.01   MAIN                                                                  07/11/2018 12:18:08 PAGE 3   

 118   2                                       {
 119   3                                       n=0;
 120   3                                       }
 121   2          }
 122   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    298    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     39       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
