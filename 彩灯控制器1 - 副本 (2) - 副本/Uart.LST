C51 COMPILER V9.01   UART                                                                  07/10/2018 08:33:02 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN Uart.OBJ
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE Uart.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          
   3          bit flagFrame = 0;  //帧接收完成标志，即接收到一帧新数据
   4          bit flagTxd = 0;    //单字节发送完成标志，用来替代TXD中断标志位
   5          unsigned char cntRxd = 0;   //接收字节计数器
   6          unsigned char pdata bufRxd[64];  //接收字节缓冲区
   7          
   8          extern void UartAction(unsigned char *buf, unsigned char len);
   9          
  10          /* 串口配置函数，baud-通信波特率 */
  11          void ConfigUART(unsigned int baud)
  12          {
  13   1          SCON  = 0x50;  //配置串口为模式1
  14   1          TMOD &= 0x0F;  //清零T1的控制位
  15   1          TMOD |= 0x20;  //配置T1为模式2
  16   1          TH1 = 256 - (11059200/12/32)/baud;  //计算T1重载值
  17   1          TL1 = TH1;     //初值等于重载值
  18   1          ET1 = 0;       //禁止T1中断
  19   1          ES  = 1;       //使能串口中断
  20   1          TR1 = 1;       //启动T1
  21   1      }
  22          /* 串口数据写入，即串口发送函数，buf-待发送数据的指针，len-指定的发送长度 */
  23          void UartWrite(unsigned char *buf, unsigned char len)
  24          {
  25   1          while (len--)  //循环发送所有字节
  26   1          {
  27   2              flagTxd = 0;      //清零发送标志
  28   2              SBUF = *buf++;    //发送一个字节数据
  29   2              while (!flagTxd); //等待该字节发送完成
  30   2          }
  31   1      }
  32          /* 串口数据读取函数，buf-接收指针，len-指定的读取长度，返回值-实际读到的长度 */
  33          unsigned char UartRead(unsigned char *buf, unsigned char len)
  34          {
  35   1          unsigned char i;
  36   1          
  37   1          if (len > cntRxd)  //指定读取长度大于实际接收到的数据长度时，
  38   1          {                  //读取长度设置为实际接收到的数据长度
  39   2              len = cntRxd;
  40   2          }
  41   1          for (i=0; i<len; i++)  //拷贝接收到的数据到接收指针上
  42   1          {
  43   2              *buf++ = bufRxd[i];
  44   2          }
  45   1          cntRxd = 0;  //接收计数器清零
  46   1          
  47   1          return len;  //返回实际读取长度
  48   1      }
  49          /* 串口接收监控，由空闲时间判定帧结束，需在定时中断中调用，ms-定时间隔 */
  50          void UartRxMonitor(unsigned char ms)
  51          {
  52   1          static unsigned char cntbkp = 0;
  53   1          static unsigned char idletmr = 0;
  54   1      
  55   1          if (cntRxd > 0)  //接收计数器大于零时，监控总线空闲时间
C51 COMPILER V9.01   UART                                                                  07/10/2018 08:33:02 PAGE 2   

  56   1          {
  57   2              if (cntbkp != cntRxd)  //接收计数器改变，即刚接收到数据时，清零空闲计时
  58   2              {
  59   3                  cntbkp = cntRxd;
  60   3                  idletmr = 0;
  61   3              }
  62   2              else                   //接收计数器未改变，即总线空闲时，累积空闲时间
  63   2              {
  64   3                  if (idletmr < 30)  //空闲计时小于30ms时，持续累加
  65   3                  {
  66   4                      idletmr += ms;
  67   4                      if (idletmr >= 30)  //空闲时间达到30ms时，即判定为一帧接收完毕
  68   4                      {
  69   5                          flagFrame = 1;  //设置帧接收完成标志
  70   5                      }
  71   4                  }
  72   3              }
  73   2          }
  74   1          else
  75   1          {
  76   2              cntbkp = 0;
  77   2          }
  78   1      }
  79          /* 串口驱动函数，监测数据帧的接收，调度功能函数，需在主循环中调用 */
  80          void UartDriver()
  81          {
  82   1          unsigned char len;
  83   1          unsigned char pdata buf[40];
  84   1      
  85   1          if (flagFrame) //有命令到达时，读取处理该命令
  86   1          {
  87   2              flagFrame = 0;
  88   2              len = UartRead(buf, sizeof(buf));  //将接收到的命令读取到缓冲区中
  89   2              UartAction(buf, len);  //传递数据帧，调用动作执行函数
  90   2          }
  91   1      }
  92          /* 串口中断服务函数 */
  93          void InterruptUART() interrupt 4
  94          {
  95   1          if (RI)  //接收到新字节
  96   1          {
  97   2              RI = 0;  //清零接收中断标志位
  98   2              if (cntRxd < sizeof(bufRxd)) //接收缓冲区尚未用完时，
  99   2              {                            //保存接收字节，并递增计数器
 100   3                  bufRxd[cntRxd++] = SBUF;
 101   3              }
 102   2          }
 103   1          if (TI)  //字节发送完毕
 104   1          {
 105   2              TI = 0;   //清零发送中断标志位
 106   2              flagTxd = 1;  //设置字节发送完成标志
 107   2          }
 108   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    255    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     64      40
   DATA SIZE        =      3       6
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.01   UART                                                                  07/10/2018 08:33:02 PAGE 3   

   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
