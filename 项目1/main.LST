C51 COMPILER V9.01   MAIN                                                                  04/22/2018 21:41:24 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          
   3          sbit LED=P0^0;
   4          sbit LED1=P0^1;
   5          sbit ADDR0=P1^0;
   6          sbit ADDR1=P1^1;
   7          sbit ADDR2=P1^2;
   8          sbit ADDR3=P1^3;
   9          sbit ENLED=P1^4;
  10          
  11          
  12          sbit BUZZ = P1^6; //蜂鸣器控制引脚
  13          bit flagBuzzOn = 0; //蜂鸣器启动标志
  14          
  15          unsigned char T0RH = 0; //T0 重载值的高字节
  16          unsigned char T0RL = 0; //T0 重载值的低字节
  17          void ConfigTimer0(unsigned int ms);
  18          extern void UartDriver();
  19          extern void ConfigUART(unsigned int baud);
  20          extern void UartRxMonitor(unsigned char ms);
  21          extern void UartWrite(unsigned char *buf, unsigned char len);
  22          
  23          void main()
  24          {
  25   1      EA = 1; //开总中断
  26   1      ConfigTimer0(1); //配置 T0 定时 1ms
  27   1      ConfigUART(9600); //配置波特率为 9600
  28   1      while (1)
  29   1      {
  30   2      UartDriver(); //调用串口驱动
  31   2      }
  32   1      }
  33          
  34          /* 内存比较函数，比较两个指针所指向的内存数据是否相同，
  35          ptr1-待比较指针 1，ptr2-待比较指针 2，len-待比较长度
  36          返回值-两段内存数据完全相同时返回 1，不同返回 0 */
  37          bit CmpMemory(unsigned char *ptr1, unsigned char *ptr2, unsigned char len)
  38          {
  39   1      while (len--)
  40   1      {
  41   2      if (*ptr1++ != *ptr2++) //遇到不相等数据时即刻返回 0
  42   2      {
  43   3      return 0;
  44   3      }
  45   2      }
  46   1      return 1; //比较完全部长度数据都相等则返回 1
  47   1      }
  48          void ledshanshuo()                      //LED2闪烁和LED1亮
  49          {
  50   1         unsigned int i=0;
  51   1         ENLED=0;
  52   1         ADDR3=1;
  53   1      
  54   1         ADDR2=1;
  55   1         ADDR1=1;
C51 COMPILER V9.01   MAIN                                                                  04/22/2018 21:41:24 PAGE 2   

  56   1         ADDR0=0;
  57   1         while(1)
  58   1         {
  59   2          LED=0;
  60   2           LED1=0;
  61   2               for(i=0;i<3000;i++);
  62   2               LED1=1;
  63   2               for(i=0;i<3000;i++);
  64   2          }
  65   1      }
  66          
  67          void led()
  68          {
  69   1      unsigned int i=0;
  70   1         ENLED=0;
  71   1         ADDR3=1;
  72   1      
  73   1         ADDR2=1;
  74   1         ADDR1=1;
  75   1         ADDR0=0;
  76   1         LED=0;
  77   1         while(1);
  78   1      }
  79          
  80          /* 串口动作函数，根据接收到的命令帧执行响应的动作
  81          buf-接收到的命令帧指针，len-命令帧长度 */
  82          void UartAction(unsigned char *buf, unsigned char len)
  83          {
  84   1      unsigned char i;
  85   1      unsigned char code cmd0[] = "1"; //led闪烁、led亮
  86   1      unsigned char code cmd1[] = "2"; //打开蜂鸣器命令
  87   1      unsigned char code cmd2[] = "3"; //关闭蜂鸣器命令
  88   1      unsigned char code cmdLen[] = { //命令长度汇总表
  89   1      sizeof(cmd0)-1, sizeof(cmd1)-1, sizeof(cmd2)-1,
  90   1      };
  91   1      unsigned char code *cmdPtr[] = { //命令指针汇总表
  92   1      &cmd0[0], &cmd1[0], &cmd2[0],
  93   1      };
  94   1      for (i=0; i<sizeof(cmdLen); i++) //遍历命令列表，查找相同命令
  95   1      {
  96   2      if (len >= cmdLen[i]) //首先接收到的数据长度要不小于命令长度
  97   2      {
  98   3      if (CmpMemory(buf, cmdPtr[i], cmdLen[i])) //比较相同时退出循环
  99   3      {
 100   4      break;
 101   4      }
 102   3      }
 103   2      }
 104   1      switch (i) //循环退出时 i 的值即是当前命令的索引值
 105   1      {
 106   2      case 0:
 107   2      ledshanshuo();   //LED2闪烁和LED1亮
 108   2      led();
 109   2      
 110   2      break;
 111   2      case 1:
 112   2      flagBuzzOn = 1; //开启蜂鸣器
 113   2      break;
 114   2      case 2:
 115   2      break;
 116   2      
 117   2      default: //未找到相符命令时，给上机发送“错误命令”的提示
C51 COMPILER V9.01   MAIN                                                                  04/22/2018 21:41:24 PAGE 3   

 118   2      UartWrite("bad command.\r\n", sizeof("bad command.\r\n")-1);
 119   2      return;
 120   2      }
 121   1      buf[len++] = '\r'; //有效命令被执行后，在原命令帧之后添加
 122   1      buf[len++] = '\n'; //回车换行符后返回给上位机，表示已执行
 123   1      UartWrite(buf, len);
 124   1      }
 125          
 126          /* 配置并启动 T0，ms-T0 定时时间 */
 127          void ConfigTimer0(unsigned int ms)
 128          {
 129   1      unsigned long tmp; //临时变量
 130   1      tmp = 11059200 / 12; //定时器计数频率
 131   1      tmp = (tmp * ms) / 1000; //计算所需的计数值
 132   1      tmp = 65536 - tmp; //计算定时器重载值
 133   1      tmp = tmp + 33; //补偿中断响应延时造成的误差
 134   1      T0RH = (unsigned char)(tmp>>8); //定时器重载值拆分为高低字节
 135   1      T0RL = (unsigned char)tmp;
 136   1      TMOD &= 0xF0; //清零 T0 的控制位
 137   1      TMOD |= 0x01; //配置 T0 为模式 1
 138   1      TH0 = T0RH; //加载 T0 重载值
 139   1      TL0 = T0RL;
 140   1      ET0 = 1; //使能 T0 中断
 141   1      TR0 = 1; //启动 T0
 142   1      }
 143          /* T0 中断服务函数，执行串口接收监控和蜂鸣器驱动 */
 144          void InterruptTimer0() interrupt 1
 145          {
 146   1      TH0 = T0RH; //重新加载重载值
 147   1      TL0 = T0RL;
 148   1      if (flagBuzzOn) //执行蜂鸣器鸣叫或关闭
 149   1      BUZZ = ~BUZZ;
 150   1      else
 151   1      BUZZ = 1;
 152   1      UartRxMonitor(1); //串口接收监控
 153   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    491    ----
   CONSTANT SIZE    =     30    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      23
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
