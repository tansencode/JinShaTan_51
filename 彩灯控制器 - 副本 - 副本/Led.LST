C51 COMPILER V9.01   LED                                                                   07/10/2018 21:22:42 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN Led.OBJ
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE Led.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h>
   2          
   3          sbit ADDR0=P1^0;
   4          sbit ADDR1=P1^1;
   5          sbit ADDR2=P1^2;
   6          
   7          sbit ADDR3=P1^3;
   8          sbit ENLED=P1^4;
   9          unsigned char T1RH = 0;    //T1重载值的高字节
  10          unsigned char T1RL = 0;    //T1重载值的低字节
  11          bit flag1s = 1;       //300ms定时标志
  12          static unsigned char cnt=0;
  13          static unsigned int n=0;
  14          unsigned char code ledd[7]={0xE7,0xDB,0xBD,0x7E,0xBD,0xDB};
  15              //其实就是定义了一个亮灯状态表,由中间到两边，再由两边倒中间,然后P0循环此数组
  16              //1110 0111  ,  1101 1011 , 1011 1101  ,0111 1110, 1011 1101, 1101 1011, 1110 0111
  17          void ConfigTimer1(unsigned int ms);
  18          
  19          void Led2()
  20          {
  21   1        EA = 1; //使能总中断,打开总开关
  22   1        ENLED=0;
  23   1        ADDR3=1;
  24   1      
  25   1        ADDR2=1;
  26   1        ADDR1=1;
  27   1        ADDR0=0;
  28   1        //P0=0xFF;
  29   1        ConfigTimer1(10);
  30   1        while(1)
  31   1        {
  32   2                      if(flag1s)
  33   2                      {
  34   3                      flag1s=0;
  35   3              //P0=~(0x01<<cnt);              //逻辑左移,取反，0000 0001――1111 1100
  36   3                      P0=ledd[6];
  37   3                      }
  38   2                      
  39   2           
  40   2               /*for(cnt=0;cnt<7;cnt++)           //移位判断，向右移7位，第一个不记做移位
  41   2               {
  42   2                  P0=~(0xC0>>cnt);            //逻辑右移,取反，1100 0000――0011 1111
  43   2                      for(i=0;i<30000;i++);     //延时函数，不断执行空循环
  44   2                }      */
  45   2        }
  46   1      }
  47          
  48          /*void Led2()
  49          {
  50            unsigned int i=0;
  51            unsigned char cnt=0;
  52            ENLED=0;
  53            ADDR3=1;
  54          
  55            ADDR2=1;
C51 COMPILER V9.01   LED                                                                   07/10/2018 21:22:42 PAGE 2   

  56            ADDR1=1;
  57            ADDR0=0;
  58            P0=0xFF;
  59             for(t=0;t<100;t++)
  60            {
  61                  
  62                   for(cnt=0;cnt<8;cnt++)     //移位判断，向右移7位，第一个不记做移位
  63                   {
  64                      P0=~(0x80>>cnt);            //逻辑右移,取反，1000 0000――0011 1111
  65                          for(i=0;i<30000;i++);     //延时函数，不断执行空循环
  66                    }
  67                    P0=0xFF;
  68            }
  69            
  70          }       
  71          
  72          void Led6()
  73          {
  74            unsigned int i=0;
  75            unsigned char cnt=0;
  76            ENLED=0;
  77            ADDR3=1;
  78          
  79            ADDR2=1;
  80            ADDR1=1;
  81            ADDR0=0;
  82            P0=0xFF;
  83            while(1)
  84            {
  85                   for(cnt=0;cnt<7;cnt++)    //移位判断，向左移7位，第一个不记做移位
  86               {
  87                  P0=~(0x03<<cnt);                //逻辑左移,取反，0000 0011――1111 1100
  88                          for(i=0;i<30000;i++);     //延时函数，不断执行空循环
  89               }
  90                   for(cnt=0;cnt<7;cnt++)     //移位判断，向右移7位，第一个不记做移位
  91                   {
  92                      P0=~(0xC0>>cnt);            //逻辑右移,取反，1100 0000――0011 1111
  93                          for(i=0;i<30000;i++);     //延时函数，不断执行空循环
  94                    }
  95            }
  96          }
  97          void Led3()
  98          {
  99            unsigned int i=0;
 100            unsigned char cnt=0;
 101            ENLED=0;
 102            ADDR3=1;
 103          
 104            ADDR2=1;
 105            ADDR1=1;
 106            ADDR0=0;
 107            P0=0xFF;
 108            //while(1)
 109            {
 110                   for(cnt=0;cnt<8;cnt++)    //移位判断，向左移7位，第一个不记做移位
 111               {
 112                  P0=~(0x03<<cnt);                //逻辑左移,取反，0000 0011――1111 1100
 113                          for(i=0;i<25000;i++);     //延时函数，不断执行空循环
 114               }
 115                   for(cnt=0;cnt<8;cnt++)     //移位判断，向右移7位，第一个不记做移位
 116                   {
 117                      P0=~(0xC0>>cnt);            //逻辑右移,取反，1100 0000――0011 1111
C51 COMPILER V9.01   LED                                                                   07/10/2018 21:22:42 PAGE 3   

 118                          for(i=0;i<25000;i++);     //延时函数，不断执行空循环
 119                    }
 120            }
 121          }
 122          void Led4()
 123          {
 124            unsigned int i=0;
 125            unsigned char cnt=0;
 126            ENLED=0;
 127            ADDR3=1;
 128          
 129            ADDR2=1;
 130            ADDR1=1;
 131            ADDR0=0;
 132            P0=0xFF;
 133            while(1)
 134            {
 135                   for(cnt=0;cnt<7;cnt=cnt+2)    //移位判断，向左移7位，第一个不记做移位
 136               {
 137                  P0=~(0x08<<cnt);                //逻辑左移,取反，0000 1000――1111 0111
 138                          for(i=0;i<30000;i++);     //延时函数，不断执行空循环
 139               }
 140                   for(cnt=0;cnt<7;cnt=cnt+2)         //移位判断，向右移7位，第一个不记做移位
 141                   {
 142                      P0=~(0x10>>cnt);            //逻辑右移,取反，0001 0000――1110 1111
 143                          for(i=0;i<30000;i++);     //延时函数，不断执行空循环
 144                    }
 145            }
 146          }  
 147          
 148          void Led5()
 149          {
 150              unsigned int i=0;
 151                  unsigned int cnt=0;
 152                  ENLED=0;
 153              ADDR3=1;
 154          
 155              ADDR2=1;
 156              ADDR1=1;
 157              ADDR0=0;
 158                  P0=0xFF;
 159              while(1)
 160              {
 161                  for(cnt=0;cnt<6;cnt++)
 162                          {
 163                      P0=ledd[cnt];
 164                                  for(i=0;i<30000;i++);
 165                          }
 166            }
 167          }          */
 168          
 169          /* 配置并启动T1，ms-定时时间 */
 170          void ConfigTimer1(unsigned int ms)
 171          {
 172   1          unsigned long tmp;  //临时变量
 173   1          
 174   1          tmp = 11059200 / 12;      //定时器计数频率
 175   1          tmp = (tmp * ms) / 1000;  //计算所需的计数值
 176   1          tmp = 65536 - tmp;        //计算定时器重载值
 177   1          tmp = tmp + 12;           //补偿中断响应延时造成的误差
 178   1          T1RH = (unsigned char)(tmp>>8);  //定时器重载值拆分为高低字节
 179   1          T1RL = (unsigned char)tmp;
C51 COMPILER V9.01   LED                                                                   07/10/2018 21:22:42 PAGE 4   

 180   1          TMOD &= 0x0F;   //清零T1的控制位
 181   1          TMOD |= 0x10;   //配置T1为模式1
 182   1          TH1 = T1RH;     //加载T1重载值
 183   1          TL1 = T1RL;
 184   1          ET1 = 1;        //使能T1中断
 185   1          TR1 = 1;        //启动T1
 186   1      }
 187          
 188          /* T1中断服务函数，定时动态调整占空比 */
 189          void InterruptTimer1() interrupt 3
 190          {
 191   1          static unsigned int tmr1s=0;
 192   1          TH1 = T1RH;  //重新加载T1重载值
 193   1          TL1 = T1RL;
 194   1      
 195   1              tmr1s++;
 196   1              if(tmr1s>=100)
 197   1              {
 198   2                  tmr1s=0;
 199   2                      flag1s=1;
 200   2                      n++;
 201   2                      if(n==6)
 202   2                      n=0;
 203   2      
 204   2              }
 205   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    212    ----
   CONSTANT SIZE    =      7    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
