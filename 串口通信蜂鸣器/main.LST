C51 COMPILER V9.01   MAIN                                                                  05/11/2018 12:15:04 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          sbit BUZZ = P1^6; //蜂鸣器控制引脚
   3          bit flagBuzzOn = 0; //蜂鸣器启动标志
   4          unsigned char T0RH = 0; //T0 重载值的高字节
   5          unsigned char T0RL = 0; //T0 重载值的低字节
   6          void ConfigTimer0(unsigned int ms);
   7          extern void UartDriver();
   8          extern void ConfigUART(unsigned int baud);
   9          extern void UartRxMonitor(unsigned char ms);
  10          extern void UartWrite(unsigned char *buf, unsigned char len);
  11          extern void InitLcd1602();
  12          extern void LcdShowStr(unsigned char x, unsigned char y, unsigned char *str);
  13          extern void LcdAreaClear(unsigned char x, unsigned char y, unsigned char len);
  14          void main()
  15          {
  16   1      EA = 1; //开总中断
  17   1      ConfigTimer0(1); //配置 T0 定时 1ms
  18   1      ConfigUART(9600); //配置波特率为 9600
  19   1      InitLcd1602(); //初始化液晶
  20   1      while (1)
  21   1      {
  22   2      UartDriver(); //调用串口驱动
  23   2      }
  24   1      }
  25          /* 内存比较函数，比较两个指针所指向的内存数据是否相同，
  26          ptr1-待比较指针 1，ptr2-待比较指针 2，len-待比较长度
  27          返回值-两段内存数据完全相同时返回 1，不同返回 0 */
  28          bit CmpMemory(unsigned char *ptr1, unsigned char *ptr2, unsigned char len)
  29          {
  30   1      while (len--)
  31   1      {
  32   2      if (*ptr1++ != *ptr2++) //遇到不相等数据时即刻返回 0
  33   2      {
  34   3      return 0;
  35   3      }
  36   2      }
  37   1      return 1; //比较完全部长度数据都相等则返回 1
  38   1      }
  39          /* 串口动作函数，根据接收到的命令帧执行响应的动作
  40          buf-接收到的命令帧指针，len-命令帧长度 */
  41          void UartAction(unsigned char *buf, unsigned char len)
  42          {
  43   1      unsigned char i;
  44   1      unsigned char code cmd0[] = "buzz on"; //开蜂鸣器命令
  45   1      unsigned char code cmd1[] = "buzz off"; //关蜂鸣器命令
  46   1      unsigned char code cmd2[] = " "; //字符串显示命令
  47   1      unsigned char code cmdLen[] = { //命令长度汇总表
  48   1      sizeof(cmd0)-1, sizeof(cmd1)-1, sizeof(cmd2)-1,
  49   1      };
  50   1      unsigned char code *cmdPtr[] = { //命令指针汇总表
  51   1      &cmd0[0], &cmd1[0], &cmd2[0],
  52   1      };
  53   1      for (i=0; i<sizeof(cmdLen); i++) //遍历命令列表，查找相同命令
  54   1      {
  55   2      if (len >= cmdLen[i]) //首先接收到的数据长度要不小于命令长度
C51 COMPILER V9.01   MAIN                                                                  05/11/2018 12:15:04 PAGE 2   

  56   2      {
  57   3      if (CmpMemory(buf, cmdPtr[i], cmdLen[i])) //比较相同时退出循环
  58   3      {
  59   4      break;
  60   4      }
  61   3      }
  62   2      }
  63   1      switch (i) //循环退出时 i 的值即是当前命令的索引值
  64   1      {
  65   2      case 0:
  66   2      flagBuzzOn = 1; //开启蜂鸣器
  67   2      break;
  68   2      case 1:
  69   2      flagBuzzOn = 0; //关闭蜂鸣器
  70   2      break;
  71   2      case 2:
  72   2      buf[len] = '\0'; //为接收到的字符串添加结束符
  73   2      LcdShowStr(0, 0, buf+cmdLen[2]); //显示命令后的字符串
  74   2      i = len - cmdLen[2]; //计算有效字符个数
  75   2      if (i < 16) //有效字符少于 16 时，清除液晶上的后续字符位
  76   2      {
  77   3      LcdAreaClear(i, 0, 16-i);
  78   3      }
  79   2      break;
  80   2      default: //未找到相符命令时，给上机发送“错误命令”的提示
  81   2      UartWrite("bad command.\r\n", sizeof("bad command.\r\n")-1);
  82   2      return;
  83   2      }
  84   1      buf[len++] = '\r'; //有效命令被执行后，在原命令帧之后添加
  85   1      buf[len++] = '\n'; //回车换行符后返回给上位机，表示已执行
  86   1      UartWrite(buf, len);
  87   1      }
  88          /* 配置并启动 T0，ms-T0 定时时间 */
  89          void ConfigTimer0(unsigned int ms)
  90          {
  91   1      unsigned long tmp; //临时变量
  92   1      tmp = 11059200 / 12; //定时器计数频率
  93   1      tmp = (tmp * ms) / 1000; //计算所需的计数值
  94   1      tmp = 65536 - tmp; //计算定时器重载值
  95   1      tmp = tmp + 33; //补偿中断响应延时造成的误差
  96   1      T0RH = (unsigned char)(tmp>>8); //定时器重载值拆分为高低字节
  97   1      T0RL = (unsigned char)tmp;
  98   1      TMOD &= 0xF0; //清零 T0 的控制位
  99   1      TMOD |= 0x01; //配置 T0 为模式 1
 100   1      TH0 = T0RH; //加载 T0 重载值
 101   1      TL0 = T0RL;
 102   1      ET0 = 1; //使能 T0 中断
 103   1      TR0 = 1; //启动 T0
 104   1      }
 105          /* T0 中断服务函数，执行串口接收监控和蜂鸣器驱动 */
 106          void InterruptTimer0() interrupt 1
 107          {
 108   1      TH0 = T0RH; //重新加载重载值
 109   1      TL0 = T0RL;
 110   1      if (flagBuzzOn) //执行蜂鸣器鸣叫或关闭
 111   1      BUZZ = ~BUZZ;
 112   1      else
 113   1      BUZZ = 1;
 114   1      UartRxMonitor(1); //串口接收监控
 115   1      }


C51 COMPILER V9.01   MAIN                                                                  05/11/2018 12:15:04 PAGE 3   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    486    ----
   CONSTANT SIZE    =     43    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      21
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
