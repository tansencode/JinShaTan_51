C51 COMPILER V9.01   MAIN                                                                  05/23/2018 20:05:41 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #define uchar unsigned char 
   3          #define uint unsigned int
   4          
   5          sbit ADDR0 = P1^0;
   6          sbit ADDR1 = P1^1;
   7          sbit ADDR2 = P1^2;
   8          sbit ADDR3 = P1^3;
   9          sbit ENLED = P1^4;
  10          
  11          signed long frequency=0;
  12          bit start=0;   //定时器，计数模式启动变量
  13          unsigned char Pulse = 0;
  14          unsigned char T0RH=0;
  15          unsigned char T0RL=0;
  16          unsigned char code LedChar[] = { //数码管显示字符转换表
  17          0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8,
  18          0x80, 0x90, 0x88, 0x83, 0xC6, 0xA1, 0x86, 0x8E
  19          };
  20          unsigned char LedBuff[6] = { //数码管显示缓冲区
  21          0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
  22          };
  23          
  24          /* 将一个无符号长整型的数字显示到数码管上，num-待显示数字 */
  25          void ShowNumber(unsigned long num)
  26          {
  27   1           signed char i;
  28   1           unsigned char buf[6];
  29   1           for (i=0; i<6; i++) //把长整型数转换为 6 位十进制的数组
  30   1           {
  31   2               buf[i] = num % 10;
  32   2               num = num / 10;
  33   2            }
  34   1            for (i=5; i>=1; i--) //从最高位起，遇到 0 转换为空格，遇到非 0 则退出循环
  35   1            {
  36   2                if (buf[i] == 0)
  37   2                LedBuff[i] = 0xFF;
  38   2                else
  39   2               break;
  40   2            }
  41   1            for ( ; i>=0; i--) //剩余低位都如实转换为数码管显示字符
  42   1            {
  43   2                LedBuff[i] = LedChar[buf[i]];
  44   2             }
  45   1      }
  46          
  47          /* 数码管动态扫描刷新函数，需在定时中断中调用 */
  48          void LedScan()
  49          {
  50   1           static unsigned char i = 0; //动态扫描的索引
  51   1           P0 = 0xFF; //显示消隐
  52   1           switch (i)
  53   1           {
  54   2                case 0: ADDR2=0; ADDR1=0; ADDR0=0; i++; P0=LedBuff[0]; break;
  55   2                case 1: ADDR2=0; ADDR1=0; ADDR0=1; i++; P0=LedBuff[1]; break;
C51 COMPILER V9.01   MAIN                                                                  05/23/2018 20:05:41 PAGE 2   

  56   2                case 2: ADDR2=0; ADDR1=1; ADDR0=0; i++; P0=LedBuff[2]; break;
  57   2                case 3: ADDR2=0; ADDR1=1; ADDR0=1; i++; P0=LedBuff[3]; break;
  58   2                case 4: ADDR2=1; ADDR1=0; ADDR0=0; i++; P0=LedBuff[4]; break;
  59   2                case 5: ADDR2=1; ADDR1=0; ADDR0=1; i=0; P0=LedBuff[5]; break;
  60   2                default: break;
  61   2            }
  62   1      }
  63          
  64          void ConfigTimer0(unsigned int ms)
  65          {
  66   1          unsigned long tmp;
  67   1              tmp=11059200/12;
  68   1              tmp=65536-tmp;
  69   1              tmp=tmp+23;
  70   1              T0RH=(unsigned char)(tmp>>8);
  71   1              T0RL=(unsigned char)tmp;
  72   1              TMOD&=0x0F;
  73   1              TMOD|=0x10;
  74   1              TH0=T0RH;
  75   1              TL0=T0RL;
  76   1              ET0=1; 
  77   1              TR0=1;
  78   1      }
*** WARNING C280 IN LINE 64 OF MAIN.C: 'ms': unreferenced local variable
  79          void main()
  80          {
  81   1              P3 = 0xFF;
  82   1          EA = 1; //使能总中断
  83   1          ENLED = 0; //选择数码管进行显示
  84   1          ADDR3 = 1;
  85   1          ConfigTimer0(1); //T0定时1ms
  86   1              TMOD = 0x51; //设置 T0定时、T1计数都为模式 1
  87   1              TH1=0x00;
  88   1          TL1=0x00;
  89   1          //TH0 = 0xFC; //为 T0 赋初值 0xFC67，定时 1ms
  90   1          //TL0 = 0x67;
  91   1              ET1=1;
  92   1              TR1=1;
  93   1          //ET0 = 1; //使能 T0 中断
  94   1          //TR0 = 1; //启动 T0
  95   1          LedBuff[0] = LedChar[0]; //上电显示0
  96   1          while(1)
  97   1          {
  98   2           if(start==1)
  99   2             {
 100   3                 TR1=1;  //启动计数器
 101   3                         TR0 = 1;
 102   3                 start=0;  //关闭启动变量位 保证1秒时间
 103   3                 Pulse = 0;
 104   3               }       
 105   2               ShowNumber(frequency);
 106   2           }
 107   1      }
 108          void time0() interrupt 1           //T0定时
 109          {
 110   1          static int i;
 111   1         
 112   1          TH0 = 0xFC; //重新加载初值,定时1ms
 113   1          TL0 = 0x67;
 114   1               i++;
 115   1          LedScan(); //调用数码管显示扫描函数
 116   1          if(i==1000)
C51 COMPILER V9.01   MAIN                                                                  05/23/2018 20:05:41 PAGE 3   

 117   1          {
 118   2            i=0;
 119   2            TR1=0;    //停止计数
 120   2            TR0=0;          //停止定时
 121   2                //TH1=TH1+30;
 122   2            frequency = ((Pulse*65535)+(TH1*256)+TL1);         //求出频率值   就是1秒内脉冲次数
 123   2                if(frequency>800&&frequency<1100)
 124   2                {
 125   3                   frequency=frequency+50;
 126   3                 }
 127   2                else if(frequency>8000&&frequency<11000)
 128   2                {
 129   3                   frequency=frequency+1210;
 130   3                 }
 131   2                else if(frequency>80000&&frequency<110000)
 132   2                {
 133   3                   frequency=frequency+12900;
 134   3                 }
 135   2                else if(frequency>190000&&frequency<210000)
 136   2                {
 137   3                 frequency=frequency+8400;
 138   3                 }
 139   2                Pulse=0;
 140   2            TH1=0;          //计数值清零
 141   2            TL1=0;
 142   2                //TH0 = 0xFC; //重新加载初值,定时1ms
 143   2            //TL0 = 0x67;
 144   2            start=1;               //启动定时器开启变量
 145   2               // TR1=1;
 146   2       }
 147   1      }
 148          void Time1() interrupt 3        //T1计数
 149          {
 150   1         TH1=0;
 151   1         TL1=0;
 152   1         TR1=1;
 153   1         Pulse++;
 154   1      }
 155           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    749    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
