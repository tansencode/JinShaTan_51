C51 COMPILER V9.01   INFRARED                                                              05/25/2018 00:12:35 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE INFRARED
OBJECT MODULE PLACED IN Infrared.OBJ
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE Infrared.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          
   3          sbit IR_INPUT = P3^3;  //红外接收引脚
   4          
   5          bit irflag = 0;  //红外接收标志，收到一帧正确数据后置1
   6          unsigned char ircode[16];  //红外代码接收缓冲区
   7          
   8          /* 初始化红外接收功能 */
   9          void InitInfrared()
  10          {
  11   1          IR_INPUT = 1;  //确保红外接收引脚被释放
  12   1          TMOD &= 0x0F;  //清零T1的控制位
  13   1          TMOD |= 0x10;  //配置T1为模式1
  14   1          TR1 = 0;       //停止T1计数
  15   1          ET1 = 0;       //禁止T1中断
  16   1          IT1 = 1;       //设置INT1为负边沿触发
  17   1          EX1 = 1;       //使能INT1中断
  18   1      }
  19          /* 获取当前高电平的持续时间 */
  20          unsigned int GetHighTime()
  21          {
  22   1          TH1 = 0;  //清零T1计数初值
  23   1          TL1 = 0;
  24   1          TR1 = 1;  //启动T1计数
  25   1          while (IR_INPUT)  //红外输入引脚为1时循环检测等待，变为0时则结束本循环
  26   1          {
  27   2              if (TH1 >= 0x40)
  28   2              {            //当T1计数值大于0x4000，即高电平持续时间超过约18ms时，
  29   3                  break;   //强制退出循环，是为了避免信号异常时，程序假死在这里。
  30   3              }
  31   2          }
  32   1          TR1 = 0;  //停止T1计数
  33   1      
  34   1          return (TH1*256 + TL1);  //T1计数值合成为16bit整型数，并返回该数
  35   1      }
  36          /* 获取当前低电平的持续时间 */
  37          unsigned int GetLowTime()
  38          {
  39   1          TH1 = 0;  //清零T1计数初值
  40   1          TL1 = 0;
  41   1          TR1 = 1;  //启动T1计数
  42   1          while (!IR_INPUT)  //红外输入引脚为0时循环检测等待，变为1时则结束本循环
  43   1          {
  44   2              if (TH1 >= 0x40)
  45   2              {            //当T1计数值大于0x4000，即低电平持续时间超过约18ms时，
  46   3                  break;   //强制退出循环，是为了避免信号异常时，程序假死在这里。
  47   3              }
  48   2          }
  49   1          TR1 = 0;  //停止T1计数
  50   1      
  51   1          return (TH1*256 + TL1);  //T1计数值合成为16bit整型数，并返回该数
  52   1      }
  53          /* INT1中断服务函数，执行红外接收及解码 */
  54          void EXINT1_ISR() interrupt 2
  55          {
C51 COMPILER V9.01   INFRARED                                                              05/25/2018 00:12:35 PAGE 2   

  56   1          unsigned char i, j;
  57   1          unsigned char byt;
  58   1          unsigned int time;
  59   1          
  60   1          //接收并判定引导码的9ms低电平
  61   1          time = GetLowTime();
  62   1          if ((time<7833) || (time>8755))  //时间判定范围为8.5～9.5ms，
  63   1          {                                //超过此范围则说明为误码，直接退出
  64   2              IE1 = 0;   //退出前清零INT1中断标志
  65   2              return;
  66   2          }
  67   1          //接收并判定引导码的4.5ms高电平
  68   1          time = GetHighTime();
  69   1          if ((time<3686) || (time>4608))  //时间判定范围为4.0～5.0ms，
  70   1          {                                //超过此范围则说明为误码，直接退出
  71   2              IE1 = 0;
  72   2              return;
  73   2          }
  74   1          //接收并判定后续的4字节数据
  75   1          for (i=0; i<4; i++)  //循环接收4个字节
  76   1          {
  77   2              for (j=0; j<8; j++)  //循环接收判定每字节的8个bit
  78   2              {
  79   3                  //接收判定每bit的560us低电平
  80   3                  time = GetLowTime();
  81   3                  if ((time<313) || (time>718)) //时间判定范围为340～780us，
  82   3                  {                             //超过此范围则说明为误码，直接退出
  83   4                      IE1 = 0;
  84   4                      return;
  85   4                  }
  86   3                  //接收每bit高电平时间，判定该bit的值
  87   3                  time = GetHighTime();
  88   3                  if ((time>313) && (time<718)) //时间判定范围为340～780us，
  89   3                  {                             //在此范围内说明该bit值为0
  90   4                      byt >>= 1;   //因低位在先，所以数据右移，高位为0
  91   4                  }
  92   3                  else if ((time>1345) && (time<1751)) //时间判定范围为1460～1900us，
  93   3                  {                                    //在此范围内说明该bit值为1
  94   4                      byt >>= 1;   //因低位在先，所以数据右移，
  95   4                      byt |= 0x80; //高位置1
  96   4                  }
  97   3                  else  //不在上述范围内则说明为误码，直接退出
  98   3                  {
  99   4                      IE1 = 0;
 100   4                      return;
 101   4                  }
 102   3              }
 103   2              ircode[i] = byt;  //接收完一个字节后保存到缓冲区
 104   2          }
 105   1          irflag = 1;  //接收完毕后设置标志
 106   1          IE1 = 0;     //退出前清零INT1中断标志
 107   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    285    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
C51 COMPILER V9.01   INFRARED                                                              05/25/2018 00:12:35 PAGE 3   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
