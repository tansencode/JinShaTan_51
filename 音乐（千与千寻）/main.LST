C51 COMPILER V9.01   MAIN                                                                  04/13/2018 23:47:31 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          sbit BUZZ = P1^6; //蜂鸣器控制引脚
   3          unsigned int code NoteFrequ[] = { //中音 1-7 和高音 1-7 对应频率列表
   4          523, 587, 659, 698, 784, 880, 988, //中音 1-7
   5          1047, 1175, 1319, 1397, 1568, 1760, 1976 //高音 1-7
   6          };
   7          unsigned int code NoteReload[] = { //中音 1-7 和高音 1-7 对应的定时器重载值
   8          65536 - (11059200/12) / (523*2), //中音 1
   9          65536 - (11059200/12) / (587*2), //2
  10          65536 - (11059200/12) / (659*2), //3
  11          65536 - (11059200/12) / (698*2), //4
  12          65536 - (11059200/12) / (784*2), //5
  13          65536 - (11059200/12) / (880*2), //6
  14          65536 - (11059200/12) / (988*2), //7
  15          65536 - (11059200/12) / (1047*2), //高音 1
  16          65536 - (11059200/12) / (1175*2), //2
  17          65536 - (11059200/12) / (1319*2), //3
  18          65536 - (11059200/12) / (1397*2), //4
  19          65536 - (11059200/12) / (1568*2), //5
  20          65536 - (11059200/12) / (1760*2), //6
  21          65536 - (11059200/12) / (1976*2), //7
  22          0,
  23          };
  24          bit enable = 1; //蜂鸣器发声使能标志
  25          bit tmrflag = 0; //定时器中断完成标志
  26          unsigned char T0RH = 0xFF; //T0 重载值的高字节
  27          unsigned char T0RL = 0x00; //T0 重载值的低字节
  28          void PlayTwoTiger();
  29          void main()
  30          {
  31   1      unsigned int i;
  32   1      EA = 1; //使能全局中断
  33   1      TMOD = 0x01; //配置 T0 工作在模式 1
  34   1      TH0 = T0RH;
  35   1      TL0 = T0RL;
  36   1      ET0 = 1; //使能 T0 中断
  37   1      TR0 = 1; //启动 T0
  38   1      while (1)
  39   1      {
  40   2      PlayTwoTiger(); //播放乐曲--两支老虎
  41   2      for (i=0; i<40000; i++); //停止一段时间
  42   2      }
  43   1      }
  44          /* 两只老虎乐曲播放函数 */
  45          void PlayTwoTiger()
  46          {
  47   1      unsigned char beat; //当前节拍索引
  48   1      unsigned char note; //当前节拍对应的音符
  49   1      unsigned int time = 0; //当前节拍计时
  50   1      unsigned int beatTime = 0; //当前节拍总时间
  51   1      unsigned int soundTime = 0; //当前节拍需发声时间
  52   1      //两只老虎音符表
  53   1      unsigned char code TwoTigerNote[] = {
  54   1      8,9,10,8,12,     10,9,12,9,8,  6,10,   8,7   ,7,6,7,8,9,5,  8,9,10,11, 11,10,9,8,9,
  55   1      8,9,10,8,12,     10,9,12,9,8,  6,6,7,  8,5,   5,6,7,8,9,5,  8,9,10,11, 11,10,9,8,8,
C51 COMPILER V9.01   MAIN                                                                  04/13/2018 23:47:31 PAGE 2   

  56   1      10,11,12,12,12,   12,12,13,12,11,  10,10,10,10,10,  11,10,9,8,8, 8,7,6,7,7,8,9,  9,10,9,10,9,
  57   1      10,11,12,12,12,   12,12,13,12,11, 10,10,10,10,11,10,9,  8,7,6,7,6,7,8,9,5, 8,9,10,9,9,9,8,8,15,
  58   1      
  59   1      8,9,10,8,12,     10,9,12,9,8,  6,10,   8,7   ,7,6,7,8,9,5,  8,9,10,11, 11,10,9,8,9,
  60   1      8,9,10,8,12,     10,9,12,9,8,  6,6,7,  8,5,   5,6,7,8,9,5,  8,9,10,11, 11,10,9,8,8
  61   1      
  62   1      };
  63   1      //两只老虎节拍表，4 表示一拍，1 就是 1/4 拍，8 就是 2 拍
  64   1      unsigned char code TwoTigerBeat[] = {
  65   1      2,2,2,2,6 ,2,4,4,4,  2,2,6,2,8,   4,4,4,  2,2,4,4,2,2,  4,2,2,2,2,8,
  66   1      2,2,2,2,6 ,2,4,4,4,  2,2,4,2,2,   6,   2,4,4,2,2,4,4,  2,2,4,2,2,2,2,8,
  67   1      
  68   1      2,2,4,4,4,   4,2,2,2,2,4,4,4,4,  2,2,2,2,4,  4,2,2,4,4, 2,2,4,2,2,2,2,8,
  69   1      2,2,4,4,4,4,   2,2,2,2,4,4,4,  2,2,2,2,2,2,4,  2,2,2,2,4,4,2,2,6,2,2,2,16,
  70   1      
  71   1      2,2,2,2,6 ,2,4,4,4,  2,2,6,2,8,   4,4,4,  2,2,4,4,2,2,  4,2,2,2,2,8,
  72   1      2,2,2,2,6 ,2,4,4,4,  2,2,4,2,2,   6,   2,4,4,2,2,4,4,  2,2,4,2,2,2,2,8
  73   1      
  74   1      };
  75   1      for (beat=0; beat<sizeof(TwoTigerNote); ) //用节拍索引作为循环变量
  76   1      {
  77   2      while (!tmrflag); //每次定时器中断完成后，检测并处理节拍
  78   2      tmrflag = 0;
  79   2      if (time == 0) //当前节拍播完则启动一个新节拍
  80   2      {
  81   3      note = TwoTigerNote[beat] - 1;
  82   3      T0RH = NoteReload[note] >> 8;
  83   3      T0RL = NoteReload[note];
  84   3      //计算节拍总时间，右移 2 位相当于除 4，移位代替除法可以加快执行速度
  85   3      beatTime = (TwoTigerBeat[beat] * NoteFrequ[note]) >> 2;
  86   3      //计算发声时间，为总时间的 0.75，移位原理同上
  87   3      soundTime = beatTime - (beatTime >> 2);
  88   3      enable = 1; //指示蜂鸣器开始发声
  89   3      time++;
  90   3      }
  91   2      else //当前节拍未播完则处理当前节拍
  92   2      {
  93   3      if (time >= beatTime) //当前持续时间到达节拍总时间时归零，
  94   3      { //并递增节拍索引，以准备启动新节拍
  95   4      time = 0;
  96   4      beat++;
  97   4      }
  98   3      else //当前持续时间未达到总时间时，
  99   3      {
 100   4      time++; //累加时间计数
 101   4      if (time == soundTime) //到达发声时间后，指示关闭蜂鸣器，
 102   4      { //插入 0.25*总时间的静音间隔，
 103   5      enable = 0; //用以区分连续的两个节拍
 104   5      }
 105   4      }
 106   3      }
 107   2      }
 108   1      }
 109          /* T0 中断服务函数，用于控制蜂鸣器发声 */
 110          void InterruptTimer0() interrupt 1
 111          {
 112   1      TH0 = T0RH; //重新加载重载值
 113   1      TL0 = T0RL;
 114   1      tmrflag = 1;
 115   1      if (enable) //使能时反转蜂鸣器控制电平
 116   1      BUZZ = ~BUZZ;
 117   1      else //未使能时关闭蜂鸣器
C51 COMPILER V9.01   MAIN                                                                  04/13/2018 23:47:31 PAGE 3   

 118   1      BUZZ = 1;
 119   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    234    ----
   CONSTANT SIZE    =    426    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
