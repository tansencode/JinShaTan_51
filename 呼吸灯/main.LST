C51 COMPILER V9.01   MAIN                                                                  04/16/2018 23:16:55 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          sbit PWMOUT = P0^0;
   3          sbit ADDR0 = P1^0;
   4          sbit ADDR1 = P1^1;
   5          sbit ADDR2 = P1^2;
   6          sbit ADDR3 = P1^3;
   7          sbit ENLED = P1^4;
   8          unsigned char HighRH = 0; //高电平重载值的高字节
   9          unsigned char HighRL = 0; //高电平重载值的低字节
  10          unsigned char LowRH = 0; //低电平重载值的高字节
  11          unsigned char LowRL = 0; //低电平重载值的低字节
  12          void ConfigPWM(unsigned int fr, unsigned char dc);
  13          void ClosePWM();
  14          void main()
  15          {
  16   1      unsigned int i;
  17   1      EA = 1; //开总中断
  18   1      ENLED = 0; //使能独立 LED
  19   1      ADDR3 = 1;
  20   1      ADDR2 = 1;
  21   1      ADDR1 = 1;
  22   1      ADDR0 = 0;
  23   1      P0=0x00;
  24   1      while (1)
  25   1      {
  26   2      ConfigPWM(100, 10); //频率 100Hz，占空比 10%
  27   2      for (i=0; i<40000; i++);
  28   2      ClosePWM();
  29   2      ConfigPWM(100, 40); //频率 100Hz，占空比 40%
  30   2      for (i=0; i<40000; i++);
  31   2      ClosePWM();
  32   2      ConfigPWM(100, 90); //频率 100Hz，占空比 90%
  33   2      for (i=0; i<40000; i++);
  34   2      ClosePWM(); //关闭 PWM，相当于占空比 100%
  35   2      for (i=0; i<40000; i++);
  36   2      }
  37   1      }
  38          /* 配置并启动 PWM，fr-频率，dc-占空比 */
  39          void ConfigPWM(unsigned int fr, unsigned char dc)
  40          {
  41   1      unsigned int high, low;
  42   1      unsigned long tmp;
  43   1      tmp = (11059200/12) / fr; //计算一个周期所需的计数值
  44   1      high = (tmp*dc) / 100; //计算高电平所需的计数值
  45   1      low = tmp - high; //计算低电平所需的计数值
  46   1      high = 65536 - high + 12; //计算高电平的重载值并补偿中断延时
  47   1      low = 65536 - low + 12; //计算低电平的重载值并补偿中断延时
  48   1      HighRH = (unsigned char)(high>>8); //高电平重载值拆分为高低字节
  49   1      HighRL = (unsigned char)high;
  50   1      LowRH = (unsigned char)(low>>8); //低电平重载值拆分为高低字节
  51   1      LowRL = (unsigned char)low;
  52   1      TMOD &= 0xF0; //清零 T0 的控制位
  53   1      TMOD |= 0x01; //配置 T0 为模式 1
  54   1      TH0 = HighRH; //加载 T0 重载值
  55   1      TL0 = HighRL;
C51 COMPILER V9.01   MAIN                                                                  04/16/2018 23:16:55 PAGE 2   

  56   1      ET0 = 1; //使能 T0 中断
  57   1      TR0 = 1; //启动 T0
  58   1      PWMOUT = 1; //输出高电平
  59   1      }
  60          /* 关闭 PWM */
  61          void ClosePWM()
  62          {
  63   1      TR0 = 0; //停止定时器
  64   1      ET0 = 0; //禁止中断
  65   1      PWMOUT = 1; //输出高电平
  66   1      }
  67          /* T0 中断服务函数，产生 PWM 输出 */
  68          void InterruptTimer0() interrupt 1
  69          {
  70   1      if (PWMOUT == 1) //当前输出为高电平时，装载低电平值并输出低电平
  71   1      {
  72   2      TH0 = LowRH;
  73   2      TL0 = LowRL;
  74   2      PWMOUT = 0;
  75   2      }
  76   1      else //当前输出为低电平时，装载高电平值并输出高电平
  77   1      {
  78   2      TH0 = HighRH;
  79   2      TL0 = HighRL;
  80   2      PWMOUT = 1;
  81   2      }
  82   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    286    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
