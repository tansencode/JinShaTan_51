C51 COMPILER V9.01   LED                                                                   07/08/2018 14:38:03 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN Led.OBJ
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE Led.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h>
   2          #include <intrins.h>
   3          
   4          sbit ADDR0=P1^0;
   5          sbit ADDR1=P1^1;
   6          sbit ADDR2=P1^2;
   7          
   8          sbit ADDR3=P1^3;
   9          sbit ENLED=P1^4;
  10          extern void KeyScan();
  11          extern void KeyDriver();
  12          extern void KeyAction(unsigned char keycode);
  13          unsigned char T1RH = 0;    //T1重载值的高字节
  14          unsigned char T1RL = 0;    //T1重载值的低字节
  15          bit flag1s = 1;       //300ms定时标志
  16          static unsigned char cnt=0;
  17          static unsigned int t=0;
  18          unsigned char ledd[7]={0xE7,0xDB,0xBD,0x7E,0xBD,0xDB};
  19              //其实就是定义了一个亮灯状态表,由中间到两边，再由两边倒中间,然后P0循环此数组
  20              //1110 0111  ,  1101 1011 , 1011 1101  ,0111 1110, 1011 1101, 1101 1011, 1110 0111
  21          
  22          extern void ConfigTimer0(unsigned int ms);
  23          void ConfigTimer1(unsigned int ms);
  24          /* 软件延时函数，延时时间(t*10)us */
  25          /*void DelayX10us(unsigned char t)
  26          {
  27              do {
  28                  _nop_();
  29                  _nop_();
  30                  _nop_();
  31                  _nop_();
  32                  _nop_();
  33                  _nop_();
  34                  _nop_();
  35                  _nop_();
  36              } while (--t);
  37          }       */
  38          void Led1()
  39          {
  40   1        EA = 1; //使能总中断,打开总开关
  41   1        ENLED=0;
  42   1        ADDR3=1;
  43   1      
  44   1        ADDR2=1;
  45   1        ADDR1=1;
  46   1        ADDR0=0;
  47   1        //P0=0xFF;
  48   1        P0=0xFF;
  49   1        ConfigTimer1(10);
  50   1        while(1)
  51   1        {
  52   2                      if(flag1s)
  53   2                      {
  54   3                      flag1s=0;
  55   3              P0=~(0x01<<cnt);                //逻辑左移,取反，0000 0001――1111 1100
C51 COMPILER V9.01   LED                                                                   07/08/2018 14:38:03 PAGE 2   

  56   3                      
  57   3                      }
  58   2                      
  59   2           
  60   2               /*for(cnt=0;cnt<7;cnt++)           //移位判断，向右移7位，第一个不记做移位
  61   2               {
  62   2                  P0=~(0xC0>>cnt);            //逻辑右移,取反，1100 0000――0011 1111
  63   2                      for(i=0;i<30000;i++);     //延时函数，不断执行空循环
  64   2                }      */
  65   2        }
  66   1      }
  67          
  68          void Led2()
  69          {
  70   1        unsigned int i=0;
  71   1        unsigned char cnt=0;
  72   1        ENLED=0;
  73   1        ADDR3=1;
  74   1      
  75   1        ADDR2=1;
  76   1        ADDR1=1;
  77   1        ADDR0=0;
  78   1        P0=0xFF;
  79   1         for(t=0;t<100;t++)
  80   1        {
  81   2              /* for(cnt=0;cnt<7;cnt++)    //移位判断，向左移7位，第一个不记做移位
  82   2           {
  83   2              P0=~(0x03<<cnt);                //逻辑左移,取反，0000 0011――1111 1100
  84   2                      for(i=0;i<30000;i++);     //延时函数，不断执行空循环
  85   2           }  */
  86   2               for(cnt=0;cnt<8;cnt++)     //移位判断，向右移7位，第一个不记做移位
  87   2               {
  88   3                  P0=~(0x80>>cnt);            //逻辑右移,取反，1000 0000――0011 1111
  89   3                      for(i=0;i<30000;i++);     //延时函数，不断执行空循环
  90   3                }
  91   2                P0=0xFF;
  92   2        }
  93   1        
  94   1      }
  95          
  96          void Led6()
  97          {
  98   1        unsigned int i=0;
  99   1        unsigned char cnt=0;
 100   1        ENLED=0;
 101   1        ADDR3=1;
 102   1      
 103   1        ADDR2=1;
 104   1        ADDR1=1;
 105   1        ADDR0=0;
 106   1        P0=0xFF;
 107   1        while(1)
 108   1        {
 109   2               for(cnt=0;cnt<7;cnt++)    //移位判断，向左移7位，第一个不记做移位
 110   2           {
 111   3              P0=~(0x03<<cnt);                //逻辑左移,取反，0000 0011――1111 1100
 112   3                      for(i=0;i<30000;i++);     //延时函数，不断执行空循环
 113   3           }
 114   2               for(cnt=0;cnt<7;cnt++)     //移位判断，向右移7位，第一个不记做移位
 115   2               {
 116   3                  P0=~(0xC0>>cnt);            //逻辑右移,取反，1100 0000――0011 1111
 117   3                      for(i=0;i<30000;i++);     //延时函数，不断执行空循环
C51 COMPILER V9.01   LED                                                                   07/08/2018 14:38:03 PAGE 3   

 118   3                }
 119   2        }
 120   1      }
 121          void Led3()
 122          {
 123   1        unsigned int i=0;
 124   1        unsigned char cnt=0;
 125   1        ENLED=0;
 126   1        ADDR3=1;
 127   1      
 128   1        ADDR2=1;
 129   1        ADDR1=1;
 130   1        ADDR0=0;
 131   1        P0=0xFF;
 132   1        //while(1)
 133   1        {
 134   2               for(cnt=0;cnt<8;cnt++)    //移位判断，向左移7位，第一个不记做移位
 135   2           {
 136   3              P0=~(0x03<<cnt);                //逻辑左移,取反，0000 0011――1111 1100
 137   3                      for(i=0;i<25000;i++);     //延时函数，不断执行空循环
 138   3           }
 139   2               for(cnt=0;cnt<8;cnt++)     //移位判断，向右移7位，第一个不记做移位
 140   2               {
 141   3                  P0=~(0xC0>>cnt);            //逻辑右移,取反，1100 0000――0011 1111
 142   3                      for(i=0;i<25000;i++);     //延时函数，不断执行空循环
 143   3                }
 144   2        }
 145   1      }
 146          void Led4()
 147          {
 148   1        unsigned int i=0;
 149   1        unsigned char cnt=0;
 150   1        ENLED=0;
 151   1        ADDR3=1;
 152   1      
 153   1        ADDR2=1;
 154   1        ADDR1=1;
 155   1        ADDR0=0;
 156   1        P0=0xFF;
 157   1        while(1)
 158   1        {
 159   2               for(cnt=0;cnt<7;cnt=cnt+2)    //移位判断，向左移7位，第一个不记做移位
 160   2           {
 161   3              P0=~(0x08<<cnt);                //逻辑左移,取反，0000 1000――1111 0111
 162   3                      for(i=0;i<30000;i++);     //延时函数，不断执行空循环
 163   3           }
 164   2               for(cnt=0;cnt<7;cnt=cnt+2)         //移位判断，向右移7位，第一个不记做移位
 165   2               {
 166   3                  P0=~(0x10>>cnt);            //逻辑右移,取反，0001 0000――1110 1111
 167   3                      for(i=0;i<30000;i++);     //延时函数，不断执行空循环
 168   3                }
 169   2        }
 170   1      }  
 171          
 172          void Led5()
 173          {
 174   1          unsigned int i=0;
 175   1              unsigned int cnt=0;
 176   1              ENLED=0;
 177   1          ADDR3=1;
 178   1      
 179   1          ADDR2=1;
C51 COMPILER V9.01   LED                                                                   07/08/2018 14:38:03 PAGE 4   

 180   1          ADDR1=1;
 181   1          ADDR0=0;
 182   1              P0=0xFF;
 183   1          while(1)
 184   1          {
 185   2              for(cnt=0;cnt<6;cnt++)
 186   2                      {
 187   3                  P0=ledd[cnt];
 188   3                              for(i=0;i<30000;i++);
 189   3                      }
 190   2        }
 191   1      }
 192          
 193          /* 配置并启动T1，ms-定时时间 */
 194          void ConfigTimer1(unsigned int ms)
 195          {
 196   1          unsigned long tmp;  //临时变量
 197   1          
 198   1          tmp = 11059200 / 12;      //定时器计数频率
 199   1          tmp = (tmp * ms) / 1000;  //计算所需的计数值
 200   1          tmp = 65536 - tmp;        //计算定时器重载值
 201   1          tmp = tmp + 12;           //补偿中断响应延时造成的误差
 202   1          T1RH = (unsigned char)(tmp>>8);  //定时器重载值拆分为高低字节
 203   1          T1RL = (unsigned char)tmp;
 204   1          TMOD &= 0x0F;   //清零T1的控制位
 205   1          TMOD |= 0x10;   //配置T1为模式1
 206   1          TH1 = T1RH;     //加载T1重载值
 207   1          TL1 = T1RL;
 208   1          ET1 = 1;        //使能T1中断
 209   1          TR1 = 1;        //启动T1
 210   1      }
 211          
 212          /* T1中断服务函数，定时动态调整占空比 */
 213          void InterruptTimer1() interrupt 3
 214          {
 215   1          static unsigned int tmr1s=0;
 216   1              static bit dir = 0;
 217   1          static unsigned char index = 0;
 218   1          TH1 = T1RH;  //重新加载T1重载值
 219   1          TL1 = T1RL;
 220   1      
 221   1              tmr1s++;
 222   1              if(tmr1s>=100)
 223   1              {
 224   2                  tmr1s=0;
 225   2                      flag1s=1;
 226   2                      cnt++;
 227   2                      t++;
 228   2                      if(cnt>=8)
 229   2                      cnt=0;
 230   2      
 231   2              }
 232   1      }
*** WARNING C280 IN LINE 216 OF LED.C: 'dir': unreferenced local variable
*** WARNING C280 IN LINE 217 OF LED.C: 'index': unreferenced local variable


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    616    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.01   LED                                                                   07/08/2018 14:38:03 PAGE 5   

   DATA SIZE        =     15       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
