C51 COMPILER V9.01   MAIN                                                                  05/22/2018 22:34:53 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg51.h>
   2          #define uchar unsigned char 
   3          #define uint unsigned int
   4          
   5          sbit ADDR0 = P1^0;
   6          sbit ADDR1 = P1^1;
   7          sbit ADDR2 = P1^2;
   8          sbit ADDR3 = P1^3;
   9          sbit ENLED = P1^4;
  10          
  11          //uint ff;   //接受频率值
  12          signed long frequency=0;
  13          uchar start=1;   //定时器，计数模式启动变量
  14          bit Flag = 0;
  15          unsigned char Counter = 0,Hdata = 0,Ldata = 0,Pulse = 0;
  16          
  17          code uchar seg[]={0x28,0x7e,0xa2,0x62,0x74,0x61,0x21,0x7a,0x20,0x60};
  18          code uchar tab[]={0x7f,0xbf,0xdf,0xef,0xf7,0xfb,0xfd,0xfe};
  19          
  20          unsigned char code LedChar[] = { //数码管显示字符转换表
  21          0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8,
  22          0x80, 0x90, 0x88, 0x83, 0xC6, 0xA1, 0x86, 0x8E
  23          };
  24          unsigned char LedBuff[6] = { //数码管显示缓冲区
  25          0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
  26          };
  27          unsigned char code KeyCodeMap[4][4] = { //矩阵按键编号到标准键盘键码的映射表
  28          { 0x31, 0x32, 0x33, 0x26 }, //数字键 1、数字键 2、数字键 3、向上键
  29          { 0x34, 0x35, 0x36, 0x25 }, //数字键 4、数字键 5、数字键 6、向左键
  30          { 0x37, 0x38, 0x39, 0x28 }, //数字键 7、数字键 8、数字键 9、向下键
  31          { 0x30, 0x1B, 0x0D, 0x27 } //数字键 0、ESC 键、 回车键、 向右键
  32          };
  33          
  34          void delay(uint k)  //延时函数
  35          {
  36   1          int p;
  37   1          while(k--)
  38   1              for(p=0;p<110;p++);     
  39   1      }
  40          /*void show(uint k)  //数值显示函数
  41          {
  42            static uchar i,j;
  43            uint ss[5];
  44            i=0;
  45            do
  46            {
  47             ss[i]=k%10;
  48             i++;
  49            }while(k/=10);
  50            for(j=0;j<i;j++)
  51            {
  52             P0=seg[ss[j]];
  53             P2=tab[j];
  54             delay(100);
  55             P0=0xff;
C51 COMPILER V9.01   MAIN                                                                  05/22/2018 22:34:53 PAGE 2   

  56             P2=0xff;
  57            }  
  58          }         */
  59          
  60          
  61          void Time1() interrupt 3
  62          {
  63   1         TH1=0;
  64   1         TL1=0;
  65   1         TR1=1;
  66   1         Pulse++;
  67   1      }  
  68          void init()
  69          {
  70   1      TMOD = 0x51;
  71   1      TH0 = 0x4c;
  72   1      TL0 = 0x00;
  73   1      TH1 = 0x00;
  74   1      TL1 = 0x00;
  75   1      ET0 = 1;
  76   1      ET1 = 1;
  77   1      EA = 1;
  78   1      PT1 = 1;
  79   1      TR0 = 1;
  80   1      TR1 = 1;
  81   1      }
  82          
  83          /* 数码管上显示一位数字，index-数码管位索引(从右到左对应0～5)，
  84          **     num-待显示的数字，point-代表是否显示此位上的小数点 */
  85          void ShowLedNumber(unsigned int index, unsigned int num,unsigned int point)
  86          {
  87   1         P0=0xFF;
  88   1         LedBuff[index] = LedChar[num];  //输入数字转换为数码管字符0～F
  89   1          if (point != 0)
  90   1          {
  91   2             LedBuff[index] &= 0x7F;  //point不为0时点亮当前位的小数点
  92   2          }
  93   1      }
  94          /* 将一个无符号长整型的数字显示到数码管上，num-待显示数字 */
  95          void ShowNumber(unsigned long num)
  96          {
  97   1           signed char i;
  98   1           unsigned char buf[6];
  99   1           for (i=0; i<6; i++) //把长整型数转换为 6 位十进制的数组
 100   1           {
 101   2               buf[i] = num % 10;
 102   2               num = num / 10;
 103   2            }
 104   1            for (i=5; i>=1; i--) //从最高位起，遇到 0 转换为空格，遇到非 0 则退出循环
 105   1            {
 106   2                if (buf[i] == 0)
 107   2                LedBuff[i] = 0xFF;
 108   2                else
 109   2               break;
 110   2            }
 111   1            for ( ; i>=0; i--) //剩余低位都如实转换为数码管显示字符
 112   1            {
 113   2                LedBuff[i] = LedChar[buf[i]];
 114   2             }
 115   1      }
 116          
 117          /* 数码管动态扫描刷新函数，需在定时中断中调用 */
C51 COMPILER V9.01   MAIN                                                                  05/22/2018 22:34:53 PAGE 3   

 118          void LedScan()
 119          {
 120   1      static unsigned char i = 0; //动态扫描的索引
 121   1      P0 = 0xFF; //显示消隐
 122   1      switch (i)
 123   1      {
 124   2      case 0: ADDR2=0; ADDR1=0; ADDR0=0; i++; P0=LedBuff[0]; break;
 125   2      case 1: ADDR2=0; ADDR1=0; ADDR0=1; i++; P0=LedBuff[1]; break;
 126   2      case 2: ADDR2=0; ADDR1=1; ADDR0=0; i++; P0=LedBuff[2]; break;
 127   2      case 3: ADDR2=0; ADDR1=1; ADDR0=1; i++; P0=LedBuff[3]; break;
 128   2      case 4: ADDR2=1; ADDR1=0; ADDR0=0; i++; P0=LedBuff[4]; break;
 129   2      case 5: ADDR2=1; ADDR1=0; ADDR0=1; i=0; P0=LedBuff[5]; break;
 130   2      default: break;
 131   2      }
 132   1      }
 133          /*void time0_init()
 134          {
 135           TMOD|=0x01;  //定时器0 定时模式 计数范围65536
 136           TH0 = 0xFC; //重新加载初值
 137            TL0 = 0x67;
 138           TR0=0;     //暂停定时器0
 139          }  
 140          void time1_init()
 141          {
 142           TMOD|=0x50;     //定时器1  计数模式，计数范围65536
 143           TH1=0;      //计数初值0
 144           TL1=0;
 145           TR1=0;    //暂停计数器
 146          }
 147          void str_init()    //定时器中断
 148          {
 149             EA=1;
 150             ET0=1;
 151          }        */
 152          void time0_event() interrupt 1
 153          {
 154   1          static uchar i;
 155   1         
 156   1          TH0 = 0xFC; //重新加载初值,定时1ms
 157   1          TL0 = 0x67;
 158   1               i++;
 159   1          LedScan(); //调用数码管显示扫描函数
 160   1          if(i==1000)
 161   1          {
 162   2            i=0;
 163   2               // TR0=0;
 164   2            TR1=0;    //停止计数
 165   2           // TR0=0;          //停止定时
 166   2            frequency = ((Pulse*65535)+(TH1*256)+TL1);
 167   2            //frequency=(TH1*256+TL1);   //求出频率值   就是1秒内脉冲次数
 168   2                Pulse=0;
 169   2            TH1=0;          //计数值清零
 170   2            TL1=0;
 171   2            //TH0 = 0xFC; //重新加载初值
 172   2           //TL0 = 0x67;
 173   2            start=1;               //启动定时器开启变量
 174   2                TR1=1;
 175   2       }
 176   1      }
 177           
 178          void main()
 179          {
C51 COMPILER V9.01   MAIN                                                                  05/22/2018 22:34:53 PAGE 4   

 180   1        //ff=60000;
 181   1        //unsigned long frequency;
 182   1         init();
 183   1          EA = 1; //使能总中断
 184   1          ENLED = 0; //选择数码管进行显示
 185   1          ADDR3 = 1;
 186   1          P3 = 0xFF;
 187   1          TMOD = 0x01; //设置 T0 为模式 1
 188   1      //      TMOD = 0x51; //设置 T0 为模式 1
 189   1              TH1=0x00;
 190   1          TL1=0x00;
 191   1          TH0 = 0xFC; //为 T0 赋初值 0xFC67，定时 1ms
 192   1          TL0 = 0x67;
 193   1              ET1=1;
 194   1              TR1=1;
 195   1          ET0 = 1; //使能 T0 中断
 196   1          TR0 = 1; //启动 T0
 197   1          LedBuff[0] = LedChar[0]; //上电显示 0
 198   1         // time0_init();
 199   1         // time1_init();
 200   1         // str_init();
 201   1          while(1)
 202   1          {
 203   2           if(start==1)
 204   2             {
 205   3                 //TR0=1;  //启动定时器
 206   3                 TR1=1;  //启动计数器
 207   3                 Hdata = TH1;
 208   3                 Ldata = TL1;
 209   3                 //P3^5=frequency;
 210   3                 frequency = ((Pulse*65535)+(TH1*256)+TL1);
 211   3         //Flag = 0;
 212   3                 start=0;  //关闭启动变量位 保证1秒时间
 213   3                 Pulse = 0;
 214   3      //LcdDisplay(frequency);
 215   3               }       
 216   2               ShowNumber(frequency);
 217   2                        //ShowLedNumber(5,(frequency/100000)%10,0);                      //十位
 218   2                        //ShowLedNumber(4,(frequency/10000)%10,0);     //个位
 219   2                        //ShowLedNumber(3,(frequency/1000)%10,0);     //十分位
 220   2                       // ShowLedNumber(2,(frequency/100)%10,0);  //百分位
 221   2                       // ShowLedNumber(1,(frequency/10)%10,0);               //千分位
 222   2                       // ShowLedNumber(0,frequency%10,0);            //千分位
 223   2                       // delay(50);
 224   2           }
 225   1      }
 226          
 227          /*void InterruptTimer0() interrupt 1
 228          {
 229          TH0 = 0xFC; //重新加载初值
 230          TL0 = 0x67;
 231          LedScan(); //调用数码管显示扫描函数
 232          } */
 233          /*void Time0() interrupt 1
 234          {
 235          Counter++;
 236          LedScan(); //调用数码管显示扫描函数
 237          if (Counter == 1)
 238          TR0 = 0;
 239          TR1 = 0;
 240          Counter = 0;
 241          start = 1;
C51 COMPILER V9.01   MAIN                                                                  05/22/2018 22:34:53 PAGE 5   

 242          }  */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    609    ----
   CONSTANT SIZE    =     50    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
