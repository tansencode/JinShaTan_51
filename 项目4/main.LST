C51 COMPILER V9.01   MAIN                                                                  05/17/2018 16:05:03 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          sbit ADDR0 = P1^0;
   3          sbit ADDR1 = P1^1;
   4          sbit ADDR2 = P1^2;
   5          sbit ADDR3 = P1^3;
   6          sbit ENLED = P1^4;
   7          sbit BUZZ = P1^6; //蜂鸣器控制引脚
   8          bit flagBuzzOn = 0; //蜂鸣器启动标志
   9          unsigned char code LedChar[] = { //数码管显示字符转换表
  10          0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8,
  11          0x80, 0x90, 0x88, 0x83, 0xC6, 0xA1, 0x86, 0x8E
  12          };
  13          unsigned char LedBuff[6] = { //数码管显示缓冲区
  14          0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
  15          };
  16          
  17          bit flag1s = 0;          //1s定时标志    
  18          //bit flag200ms = 1;  //200ms定时标志
  19          unsigned char T0RH = 0;  //T0重载值的高字节
  20          unsigned char T0RL = 0;  //T0重载值的低字节
  21          
  22          void ConfigTimer0(unsigned int ms);
  23          unsigned char IntToString(unsigned char *str, int dat);
  24          extern bit Start18B20();
  25          extern bit Get18B20Temp(int *temp);
  26          extern void DelayX10us(unsigned char t);
  27          //extern void InitLcd1602();
  28          //extern void LcdShowStr(unsigned char x, unsigned char y, unsigned char *str);
  29          //void ShowNumber(unsigned long num);
  30          
  31          /* 数码管上显示一位数字，index-数码管位索引(从右到左对应0～5)，
  32          **     num-待显示的数字，point-代表是否显示此位上的小数点 */
  33          void ShowLedNumber(unsigned int index, unsigned int num,unsigned int point)
  34          {
  35   1         P0=0xFF;
  36   1         LedBuff[index] = LedChar[num];  //输入数字转换为数码管字符0～F
  37   1          if (point != 0)
  38   1          {
  39   2             LedBuff[index] &= 0x7F;  //point不为0时点亮当前位的小数点
  40   2          }
  41   1      }
  42          
  43          void main()
  44          {
  45   1          
  46   1          bit res;
  47   1          int temp;        //读取到的当前温度值
  48   1          int intT, decT;  //温度值的整数和小数部分
  49   1          unsigned char len;
  50   1          unsigned char str[12];
  51   1      
  52   1          EA = 1;            //开总中断
  53   1              EA = 1; //使能总中断
  54   1          ENLED = 0; //选择数码管进行显示
  55   1          ADDR3 = 1;
C51 COMPILER V9.01   MAIN                                                                  05/17/2018 16:05:03 PAGE 2   

  56   1              TMOD = 0x01; //设置 T0 为模式 1
  57   1          TH0 = 0xFC; //为 T0 赋初值 0xFC67，定时 1ms
  58   1          TL0 = 0x67;
  59   1          ET0 = 1; //使能 T0 中断
  60   1          TR0 = 1; //启动 T0
  61   1          ConfigTimer0(1);  //T0定时10ms
  62   1          Start18B20();      //启动DS18B20
  63   1      
  64   1              DelayX10us(100000);
  65   1          //InitLcd1602();     //初始化液晶
  66   1          while (1)
  67   1          {
  68   2              if (flag1s)  //每秒更新一次温度
  69   2              {
  70   3                  flag1s = 0;
  71   3                              P0=0xFF;
  72   3                      //      DelayX10us(100000);
  73   3                  res = Get18B20Temp(&temp);  //读取当前温度
  74   3                              
  75   3                  if (res)                    //读取成功时，刷新当前温度显示
  76   3                  {
  77   4                      intT = temp >> 4;             //分离出温度值整数部分
  78   4                      decT = temp & 0xF;            //分离出温度值小数部分
  79   4                     // len = IntToString(str, intT); //整数部分转换为字符串
  80   4                     // str[len++] = '.';             //添加小数点
  81   4                      decT = (decT*10) / 16;        //二进制的小数部分转换为1位十进制位
  82   4                      //str[len++] = decT + '0';      //十进制小数位再转换为ASCII字符
  83   4                      //while (len < 6)               //用空格补齐到6个字符长度
  84   4                     // {
  85   4                          //str[len++] = ' ';
  86   4                     // }
  87   4                      //str[len] = '\0';              //添加字符串结束符
  88   4                     // LcdShowStr(0, 0, str);        //显示到液晶屏上
  89   4                                  ShowLedNumber(5,intT/10,0);
  90   4                                      ShowLedNumber(4,(intT-(intT/10)*10),1);
  91   4                                      ShowLedNumber(3,decT,0);
  92   4                                      //ShowLedNumber(2,decT,0);
  93   4                                      //ShowLedNumber(1,decT,0);
  94   4                                      if(intT>29)
  95   4                                      flagBuzzOn = 1; //开启蜂鸣器
  96   4                                      else
  97   4                                      flagBuzzOn = 0; //开启蜂鸣器
  98   4                  }
  99   3                  else                        //读取失败时，提示错误信息
 100   3                  {
 101   4                    //  LcdShowStr(0, 0, "error!");
 102   4                                ShowLedNumber(5,0,0);
 103   4                                ShowLedNumber(4,0,1);
 104   4                                ShowLedNumber(3,0,0);
 105   4                  }
 106   3                  Start18B20();               //重新启动下一次转换
 107   3                              DelayX10us(100000);
 108   3              }
 109   2          }
 110   1      }
*** WARNING C280 IN LINE 49 OF MAIN.C: 'len': unreferenced local variable
*** WARNING C280 IN LINE 50 OF MAIN.C: 'str': unreferenced local variable
 111          
 112          
 113          /* 数码管动态扫描刷新函数，需在定时中断中调用 */
 114          void LedScan()
 115          {
C51 COMPILER V9.01   MAIN                                                                  05/17/2018 16:05:03 PAGE 3   

 116   1           static unsigned char i = 0; //动态扫描的索引
 117   1           P0 = 0xFF; //显示消隐
 118   1           switch (i)
 119   1           {
 120   2               case 0: ADDR2=0; ADDR1=0; ADDR0=0; i++; P0=LedBuff[0]; break;
 121   2               case 1: ADDR2=0; ADDR1=0; ADDR0=1; i++; P0=LedBuff[1]; break;
 122   2               case 2: ADDR2=0; ADDR1=1; ADDR0=0; i++; P0=LedBuff[2]; break;
 123   2               case 3: ADDR2=0; ADDR1=1; ADDR0=1; i++; P0=LedBuff[3]; break;
 124   2               case 4: ADDR2=1; ADDR1=0; ADDR0=0; i++; P0=LedBuff[4]; break;
 125   2               case 5: ADDR2=1; ADDR1=0; ADDR0=1; i=0; P0=LedBuff[5]; break;
 126   2               default: break;
 127   2            }
 128   1      }
 129          /* 整型数转换为字符串，str-字符串指针，dat-待转换数，返回值-字符串长度 */
 130          unsigned char IntToString(unsigned char *str, int dat)
 131          {
 132   1          signed char i = 0;
 133   1          unsigned char len = 0;
 134   1          unsigned char buf[6];
 135   1          
 136   1          if (dat < 0)  //如果为负数，首先取绝对值，并在指针上添加负号
 137   1          {
 138   2              dat = -dat;
 139   2              *str++ = '-';
 140   2              len++;
 141   2          }
 142   1          do {          //先转换为低位在前的十进制数组
 143   2              buf[i++] = dat % 10;
 144   2              dat /= 10;
 145   2          } while (dat > 0);
 146   1          len += i;     //i最后的值就是有效字符的个数
 147   1          while (i-- > 0)   //将数组值转换为ASCII码反向拷贝到接收指针上
 148   1          {
 149   2              *str++ = buf[i] + '0';
 150   2          }
 151   1          *str = '\0';  //添加字符串结束符
 152   1          
 153   1          return len;   //返回字符串长度
 154   1      }
 155          /* 配置并启动T0，ms-T0定时时间 */
 156          void ConfigTimer0(unsigned int ms)
 157          {
 158   1          unsigned long tmp;  //临时变量
 159   1          
 160   1          tmp = 11059200 / 12;      //定时器计数频率
 161   1          tmp = (tmp * ms) / 1000;  //计算所需的计数值
 162   1          tmp = 65536 - tmp;        //计算定时器重载值
 163   1          tmp = tmp + 12;           //补偿中断响应延时造成的误差
 164   1          T0RH = (unsigned char)(tmp>>8);  //定时器重载值拆分为高低字节
 165   1          T0RL = (unsigned char)tmp;
 166   1          TMOD &= 0xF0;   //清零T0的控制位
 167   1          TMOD |= 0x01;   //配置T0为模式1
 168   1          TH0 = T0RH;     //加载T0重载值
 169   1          TL0 = T0RL;
 170   1          ET0 = 1;        //使能T0中断
 171   1          TR0 = 1;        //启动T0
 172   1      }
 173          /* T0中断服务函数，完成1秒定时 */
 174          void InterruptTimer0() interrupt 1
 175          {
 176   1          static unsigned char tmr1s = 0;
 177   1          
C51 COMPILER V9.01   MAIN                                                                  05/17/2018 16:05:03 PAGE 4   

 178   1          TH0 = T0RH;  //重新加载重载值
 179   1          TL0 = T0RL;
 180   1              LedScan(); //调用数码管显示扫描函数
 181   1          tmr1s++;
 182   1          if (tmr1s++>=1)  //定时1ms
 183   1          {
 184   2              tmr1s = 0;
 185   2              flag1s = 1;
 186   2          }
 187   1              if (flagBuzzOn) //执行蜂鸣器鸣叫或关闭
 188   1          BUZZ = ~BUZZ;
 189   1          else
 190   1          BUZZ = 1;
 191   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    703    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10      38
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
