C51 COMPILER V9.01   MAIN                                                                  05/26/2018 15:12:15 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h>
   2          #include<intrins.h>             //_nop_();延时函数用
   3          #define uchar unsigned char
   4          #define uint unsigned int
   5          #define key P2
   6          sbit remoteout=P3^5;              //  遥控输出口
   7          uchar temp;  //key;
   8          uint m;
   9          uchar keyvol;
  10          extern void KeyScan();
  11          extern void KeyDriver();
  12          void KeyAction(unsigned char keycode);
  13          void ConfigTimer0(unsigned int ms);
  14          unsigned char T0RH = 0;  //T0重载值的高字节
  15          unsigned char T0RL = 0;  //T0重载值的低字节
  16          
  17          uchar code table[]={
  18          0x45,0x46,0x47,0x4f,
  19          0x66,0x6d,0x7d,0x07,
  20          0x7f,0x6f,0x77,0x7c,
  21          0x39,0x5e,0x79,0x71};
  22          
  23          /***********延时化函数**********/
  24          void delayms(uint xms)
  25          {
  26   1      uint i,j;
  27   1      for(i=xms;i>0;i--)
  28   1      for(j=120;j>0;j--);
  29   1      }
  30          /***********初始化函数**********/
  31          init()
  32          {
  33   1      P2=0xFF;
  34   1      keyvol=0;    //脉冲个数标记清零
  35   1      remoteout=0;              //关遥控输出
  36   1      IE=0x00;              //IE 单片机寄存器              此句表示单片机复位
  37   1      IP=0x01;              //开启外部中断 0
  38   1      TMOD=0x20;              //单片机工作在方式2 即 8 位自动重装 模式
  39   1      TH1=0xf3;              //40KHZ 初值
  40   1      TL1=0xf3;              //当 TF1 计数溢出时，常数 TH0里的常数重装入 TL1
  41   1      EA=1;              //开总中断
  42   1      }
  43          
  44          void KeyAction(unsigned char keycode)
  45          {  
  46   1          if(keycode==0x31)
  47   1              {
  48   2                 delayms(10);
  49   2                 while(keycode==0x31)
  50   2                 {
  51   3                    keyvol=1;
  52   3                      }
  53   2              }
  54   1              if(keycode==0x32)
  55   1              {
C51 COMPILER V9.01   MAIN                                                                  05/26/2018 15:12:15 PAGE 2   

  56   2                 delayms(10);
  57   2                 while(keycode==0x32)
  58   2                 {
  59   3                    keyvol=2;
  60   3                      }
  61   2              }
  62   1              if(keycode==0x33)
  63   1              {
  64   2                 delayms(10);
  65   2                 while(keycode==0x33)
  66   2                 {
  67   3                    keyvol=3;
  68   3                      }
  69   2              }
  70   1      }
  71          /***********按键显示函数**********/
  72          void display(uchar num)
  73          {
  74   1      P0=table[num];
  75   1      }
  76          /**********发射函数************/
  77          sed()
  78          {
  79   1      ET1=1;              //开计数器 1 中断
  80   1      TR1=1;              //开定时器 1
  81   1      delayms(3);
  82   1      ET1=0;              //关
  83   1      TR1=0;
  84   1      remoteout=1;              //40KHZ 发 3 毫秒
  85   1      for(m=keyvol;m>0;m--)
  86   1      {
  87   2      delayms(1);              //停 1 毫秒
  88   2      ET1=1; 
  89   2      TR1=1; 
  90   2      delayms(1);
  91   2      ET1=0; 
  92   2      TR1=0;
  93   2      remoteout=1;              //40KHZ 发 1 毫秒
  94   2      }
  95   1      delayms(10);
  96   1      }
  97          
  98          tx()              //这个子函数是在发射脉冲个数，不同的按键装入不同的按键个数
  99          {
 100   1      switch(key)
 101   1      {
 102   2      case 0:key=key+1;sed();break; 
 103   2      case 1:key=key+1;sed();break; 
 104   2      case 2:key=key+1;sed();break; 
 105   2      case 3:key=key+1;sed();break; 
 106   2      case 4:key=key+1;sed();break; 
 107   2      case 5:key=key+1;sed();break; 
 108   2      case 6:key=key+1;sed();break; 
 109   2      case 7:key=key+1;sed();break; 
 110   2      case 8:key=key+1;sed();break; 
 111   2      case 9:key=key+1;sed();break; 
 112   2      case 10:key=key+1;sed();break; 
 113   2      case 11:key=key+1;sed();break; 
 114   2      case 12:key=key+1;sed();break; 
 115   2      case 13:key=key+1;sed();break; 
 116   2      case 14:key=key+1;sed();break; 
 117   2      case 15:key=key+1;sed();break; 
C51 COMPILER V9.01   MAIN                                                                  05/26/2018 15:12:15 PAGE 3   

 118   2      default:break;
 119   2      }
 120   1      }
 121          /***********按键扫描函数**********/
 122          void matrixkeyscan()
 123          {
 124   1      P2=0xfe; temp= P2; temp=temp&0xf0; if(temp!=0xf0)
 125   1      {
 126   2      delayms(10);
 127   2      temp= P2; temp=temp&0xf0; if(temp!=0xf0)
 128   2      { temp=P2; 
 129   3      switch(temp)
 130   3      {
 131   4      case 0xee:   key=0;break; 
 132   4      case 0xde:    key=1;break;
 133   4      case 0xbe:    key=2;break; 
 134   4      case 0x7e:    key=3;break;
 135   4      }
 136   3      while(temp!=0xf0)
 137   3      { temp=P2; temp=temp&0xf0;
 138   4      }
 139   3      display(key);
 140   3      
 141   3      
 142   3      
 143   3      tx();
 144   3      }
 145   2      }
 146   1      P2=0xfd; temp=P2; temp=temp&0xf0; if(temp!=0xf0)
 147   1      {
 148   2      delayms(10);
 149   2      temp=P2; temp=temp&0xf0; if(temp!=0xf0)
 150   2      { temp=P2; switch(temp)
 151   3      {
 152   4      case 0xed:    key=4;break; case 0xdd:   key=5;break; case 0xbd:   key=6;break; case 0x7d:   key=7;break;
 153   4      }
 154   3      while(temp!=0xf0)
 155   3      {
 156   4      temp=P2;temp=temp&0xf0;
 157   4      }
 158   3      display(key);
 159   3      tx();
 160   3      }
 161   2      
 162   2      } P2=0xfb;temp=P2;temp=temp&0xf0; if(temp!=0xf0)
 163   1      { delayms(10);temp=P2;temp=temp&0xf0; if(temp!=0xf0)
 164   2      { temp=P2; switch(temp)
 165   3      {
 166   4      case 0xeb:              key=8;break; 
 167   4      case 0xdb:              key=9;break; 
 168   4      case 0xbb:              key=10;break; 
 169   4      case 0x7b:              key=11;break;
 170   4      }
 171   3      while(temp!=0xf0)
 172   3      {
 173   4      temp=P2;temp=temp&0xf0;
 174   4      }
 175   3      display(key);
 176   3      tx();
 177   3      }
 178   2      } P2=0xf7;temp=P2;temp=temp&0xf0; if(temp!=0xf0)
 179   1      {
C51 COMPILER V9.01   MAIN                                                                  05/26/2018 15:12:15 PAGE 4   

 180   2      delayms(10);
 181   2      temp=P2;
 182   2      
 183   2      
 184   2      
 185   2      temp=temp&0xf0;
 186   2      if(temp!=0xf0)
 187   2      {
 188   3      temp=P2;
 189   3      switch(temp)
 190   3      {
 191   4      case 0xe7:    key=12;break; 
 192   4      case 0xd7:   key=13;break; 
 193   4      case 0xb7:    key=14;break; 
 194   4      case 0x77:    key=15;break;
 195   4      }
 196   3      while(temp!=0xf0)
 197   3      { temp=P2; temp=temp&0xf0;
 198   4      } display(key); tx();
 199   3      }
 200   2      }
 201   1      }
 202          /***********主函数**********/
 203          void main()
 204          {
 205   1          init();
 206   1              EA = 1;           //开总中断
 207   1              ConfigTimer0(1);  //配置T0定时1ms
 208   1          while(1)
 209   1          {
 210   2                 KeyDriver();
 211   2             //keywork();
 212   2             if(keyvol!=0)
 213   2             {
 214   3                send();
*** WARNING C206 IN LINE 214 OF MAIN.C: 'send': missing function-prototype
 215   3                keyvol=0;
 216   3             }
 217   2          }
 218   1      }
 219          
 220          /* 配置并启动T0，ms-T0定时时间 */
 221          void ConfigTimer0(unsigned int ms)
 222          {
 223   1          unsigned long tmp;  //临时变量
 224   1          
 225   1          tmp = 11059200 / 12;      //定时器计数频率
 226   1          tmp = (tmp * ms) / 1000;  //计算所需的计数值
 227   1          tmp = 65536 - tmp;        //计算定时器重载值
 228   1          tmp = tmp + 28;           //补偿中断响应延时造成的误差
 229   1          T0RH = (unsigned char)(tmp>>8);  //定时器重载值拆分为高低字节
 230   1          T0RL = (unsigned char)tmp;
 231   1          TMOD &= 0xF0;   //清零T0的控制位
 232   1          TMOD |= 0x01;   //配置T0为模式1
 233   1          TH0 = T0RH;     //加载T0重载值
 234   1          TL0 = T0RL;
 235   1          ET0 = 1;        //使能T0中断
 236   1          TR0 = 1;        //启动T0
 237   1      }
 238          /* T0中断服务函数，执行按键扫描 */
 239          void InterruptTimer0() interrupt 1
 240          {
C51 COMPILER V9.01   MAIN                                                                  05/26/2018 15:12:15 PAGE 5   

 241   1          TH0 = T0RH;  //重新加载重载值
 242   1          TL0 = T0RL;
 243   1          KeyScan();   //按键扫描
 244   1      }
 245          
 246          /*********40KHZ 发生器***********/
 247          //              定时中断 T1
 248          void time_intt1(void) interrupt 3
 249          {
 250   1      remoteout=~remoteout;              //遥控开关取反
 251   1      }
*** WARNING C290 IN LINE 42 OF MAIN.C: missing return value
*** WARNING C290 IN LINE 96 OF MAIN.C: missing return value
*** WARNING C290 IN LINE 120 OF MAIN.C: missing return value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    839    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
