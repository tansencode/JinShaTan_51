C51 COMPILER V9.01   LEDBUZZER                                                             05/03/2018 17:06:42 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LEDBUZZER
OBJECT MODULE PLACED IN ..\output\LedBuzzer.obj
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE ..\source\LedBuzzer.c BROWSE INCDIR(..\source) DEBUG OBJECTEXTEND PRINT(..
                    -\output\LedBuzzer.lst) OBJECT(..\output\LedBuzzer.obj)

line level    source

   1          #include<reg52.h>
   2          #define  _LED_BUZZER_C
   3          
   4          
   5          const uint8 code LedChar[] = {
*** ERROR C129 IN LINE 5 OF ..\SOURCE\LEDBUZZER.C: missing ';' before 'code'
   6              0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8,
   7              0x80, 0x90, 0x88, 0x83, 0xC6, 0xA1, 0x86, 0x8E
   8          };
   9          
  10          bit staBuzzer = 0; //蜂鸣器状态控制位，1-鸣叫、0-关闭
  11          struct sLedBuff ledBuff; //LED显示缓冲区，默认初值全0，正好达到上电全亮的效果
  12          
  13          /* LED初始化函数，初始化IO、配置定时器 */
  14          void InitLed()
  15          {
  16              //初始化IO口
  17              P0 = 0xFF;
  18              ENLED = 0;
  19              //配置T2作为动态扫描定时
  20              T2CON = 0x00;  //配置T2工作在16位自动重载定时器模式
  21              RCAP2H = ((65536-SYS_MCLK/1500)>>8);  //配置重载值，每秒产生1500次中断，
  22              RCAP2L = (65536-SYS_MCLK/1500);       //以使刷新率达到100Hz无闪烁的效果
  23              TH2 = RCAP2H;  //设置初值等于重载值
  24              TL2 = RCAP2L;
  25              ET2 = 1;       //使能T2中断
  26              PT2 = 1;       //设置T2中断为高优先级
  27              TR2 = 1;       //启动T2
  28          }
  29          /* 流水灯实现函数，间隔调用实现流动效果 */
  30          void FlowingLight()
  31          {
  32              static uint8 i = 0;
  33              const uint8 code tab[] = {  //流动表
  34                  0x7F, 0x3F, 0x1F, 0x0F, 0x87, 0xC3, 0xE1, 0xF0, 0xF8, 0xFC, 0xFE, 0xFF
  35              };
  36              
  37              ledBuff.alone = tab[i];   //表中对应值送到独立LED的显示缓冲区
  38              if (i < (sizeof(tab)-1))  //索引递增循环，遍历整个流动表
  39                  i++;
  40              else
  41                  i = 0;
  42          }
  43          /* 数码管上显示一位数字，index-数码管位索引(从右到左对应0～5)，
  44          **     num-待显示的数字，point-代表是否显示此位上的小数点 */
  45          void ShowLedNumber(uint8 index, uint8 num, uint8 point)
  46          {
  47              ledBuff.number[index] = LedChar[num];  //输入数字转换为数码管字符0～F
  48              if (point != 0)
  49              {
  50                  ledBuff.number[index] &= 0x7F;  //point不为0时点亮当前位的小数点
  51              }
  52          }
  53          /* 点阵上显示一帧图片，ptr-待显示图片指针 */
C51 COMPILER V9.01   LEDBUZZER                                                             05/03/2018 17:06:42 PAGE 2   

  54          void ShowLedArray(uint8 *ptr)
  55          {
  56              uint8 i;
  57              
  58              for (i=0; i<sizeof(ledBuff.array); i++)
  59              {
  60                  ledBuff.array[i] = *ptr++;
  61              }
  62          }
  63          /* T2中断服务函数，LED动态扫描、蜂鸣器控制 */
  64          void InterruptTimer2() interrupt 5
  65          {
  66              static uint8 i = 0;  //LED位选索引
  67              
  68              TF2 = 0;  //清零T2中断标志
  69              //全部LED动态扫描显示
  70              if (ENLED == 0)  //LED使能时才进行动态扫描
  71              {
  72                  P0 = 0xFF;                       //关闭所有段选位，显示消隐
  73                  P1 = (P1 & 0xF0) | i;            //位选索引值赋值到P1口低4位
  74                  P0 = *((uint8 data*)&ledBuff+i); //缓冲区中索引位置的数据送到P0口
  75                  if (i < (sizeof(ledBuff)-1))     //索引递增循环，遍历整个缓冲区
  76                      i++;
  77                  else
  78                      i = 0;
  79              }
  80              //由蜂鸣器状态位控制蜂鸣器
  81              if (staBuzzer == 1)
  82                  BUZZER = ~BUZZER;  //蜂鸣器鸣叫
  83              else
  84                  BUZZER = 1;        //蜂鸣器静音
  85          }

C51 COMPILATION COMPLETE.  0 WARNING(S),  1 ERROR(S)
